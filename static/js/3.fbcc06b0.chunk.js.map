{"version":3,"sources":["components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/common/Paginator/Paginator.jsx","components/Users/UserItem..jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","props","portionSize","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","className","style","paginator","onClick","onPageChanged","filter","p","map","currentPage","active","e","console","log","UserItem","user","setUnFollowThunk","setFollowThunk","followingInProgress","status","info","to","id","src","photos","small","userPhoto","alt","name","follow","followed","disabled","some","Users","users","u","UsersContainer","pageNumber","getUsersThunk","this","isProgress","Preloader","React","Component","connect","state","usersPage"],"mappings":"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","file":"static/js/3.fbcc06b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Users_active__igCDk\",\"follow\":\"Users_follow__2SEXO\",\"info\":\"Users_info__W1JxX\",\"user\":\"Users_user__1dQYj\",\"status\":\"Users_status__E0SMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"active\":\"Paginator_active__3mj3D\"};","import React, {useState} from 'react';  // Нужен для того чтобы jsx конвертировать в js через babel\nimport style from './Paginator.module.css'\n\n\nlet Paginator = (props, {portionSize = 10}) => {\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n    // console.log(portionNumber);\n\n    return <div className={style.paginator}>\n        {portionNumber > 1 &&\n        <button onClick={() => {\n            setPortionNumber(portionNumber - 1)\n            props.onPageChanged(leftPortionPageNumber - 10)\n        }}>PREV</button>}\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n            .map((p) => {\n                return  <span className={props.currentPage === p ? style.active : ''}\n                              key={p}\n                              onClick={(e) => {\n                                  console.log(p);\n                                  props.onPageChanged(p);\n                              }}>{p}</span>\n            })}\n        {portionCount > portionNumber &&\n        <button onClick={() => {\n            console.log(props);\n\n            setPortionNumber(portionNumber + 1)\n            props.onPageChanged(leftPortionPageNumber + 10)\n        }}>NEXT</button>}\n    </div>\n}\n\n\nexport default Paginator;\n\n        // <div className={style.pagenation}>\n        //     {\n        //         pages.map(pageNumber => {\n        //             return <span className={props.currentPage === pageNumber ? style.active : ''}\n        //                          onClick={() => {\n        //                          props.onPageChanged(pageNumber);\n        //                          }}>{pageNumber}</span> // true && style.active это значит если true то премини класс active\n        //         })\n        //     }\n        // </div>\n    // );\n// }\n\n// export default Paginator;","import React from 'react';\nimport style from \"./Users.module.css\"; // Нужен для того чтобы jsx конвертировать в js через babel\nimport userPhoto from \"./../../assets/images/profile.png\"\nimport {NavLink} from \"react-router-dom\";\n\nlet UserItem = ({user, setUnFollowThunk, setFollowThunk, followingInProgress}) => {\n    return (\n        <div>\n            <div>\n                <div className={style.status}>\n                    <p>Status: {user.status || '------------'}</p>\n                </div>\n                <div className={style.info}>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null\n                            ? user.photos.small\n                            : userPhoto} alt=\"\"/> </NavLink>\n                    <p>{user.name}</p>\n                </div>\n                <div className={style.follow}>\n                    {user.followed ?\n                        <button disabled={followingInProgress.some(id => id === user.id)}\n                                onClick={() => {\n                                    setUnFollowThunk(user.id);\n                                }}>unfollow</button> :\n\n                        <button disabled={followingInProgress.some(id => id === user.id)}\n                                onClick={() => {\n                                    setFollowThunk(user.id);\n                                }}>follow</button>\n                    }\n                </div>\n            </div>\n            <div>\n                <div>{user.status}</div>\n            </div>\n        </div>\n\n    );\n}\n\nexport default UserItem;","import React from 'react';\nimport style from \"./Users.module.css\"; // Нужен для того чтобы jsx конвертировать в js через babel\n// import userPhoto from \"./../../assets/images/profile.png\"\n// import {NavLink} from \"react-router-dom\";\n// import Paginator from \"./Paginator\";\nimport Paginator from \"./../common/Paginator/Paginator\";\nimport UserItem from \"./UserItem.\";\n\nlet Users = (props) => {\n    return (\n        <div>\n            <Paginator {...props}  />\n            {\n                props.users.map(u =>\n                    <UserItem user={u}\n                              followingInProgress={props.followingInProgress}\n                              setFollowThunk={props.setFollowThunk}\n                              setUnFollowThunk={props.setUnFollowThunk}\n                              key={u.id}\n                              className={style.user}\n                    />\n                )\n            }\n        </div>\n    );\n}\n\nexport default Users;","import React from 'react'; // Нужен для того чтобы jsx конвертировать в js через babel\nimport {connect} from \"react-redux\";\nimport {\n    getUsersThunk,\n    setFollowThunk,\n    setUnFollowThunk\n} from \"../../redux/users-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\n// import {withAuthRedirect} from \"../hoc/AuthRedirect\";\n// import Dialogs from \"../Dialogs/Dialogs\";\n\nclass UsersContainer extends React.Component {\n\n    // constructor(props) { // Данная конструкция выполняеться по умолчанию если в constructor нечего писать не надо помимо super то писать этот метод НЕ надо\n    //     super(props);\n    // }\n\n    componentDidMount() { // ВАЖНО! Базовый метод реакта выполняет все что внутри ПОСЛЕ отрисовки DOM // ТЕПЕРЬ ДАННЫЙ МЕТОД вызывает компоненту\n\n        //СЕЙЧАС\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\n\n        //РАНЬШЕ\n        // this.props.setIsProgress(true)\n        // usersApi.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n        //     // console.log(responsive);\n        //     this.props.setIsProgress(false)\n        //     this.props.setUsers(data.items);\n        //     this.props.setTotalUsersCount(data.totalCount);\n        // });\n    }\n\n    // func = () => {}// присваеваем делаем равно что бы не пользоваться bind() что бы не терался this https://www.youtube.com/watch?v=vO63wxg4aKY c 20+- минуты\n\n    onPageChanged = (pageNumber) => {  // пагинация\n        this.props.getUsersThunk(pageNumber, this.props.pageSize);\n\n    };\n\n    render() { // рендерим компоненту после отрисовки DOM и передаем ей props\n        // debugger;\n        // console.log(this.props);\n        return <>\n            {this.props.isProgress ? <Preloader/> : null}\n            <Users\n                totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   followingInProgress={this.props.followingInProgress}\n                   setFollowThunk={this.props.setFollowThunk}\n                   setUnFollowThunk={this.props.setUnFollowThunk}\n            />\n        </>\n    }\n}\n\n// let mapDispatchToProps = (dispatch) => { // передаем в connect который их у себя вызывает и получеат объект из mapDispatchToProps  и склеивает их в props\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unFollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (pageNumber) => {\n//             dispatch(setCurrentPageAC(pageNumber))\n//         },\n//         setTotalUsersCount: (usersCount) => {\n//             dispatch(setTotalUsersCountAC(usersCount))\n//         },\n//         setIsProgress: (isProgress) => {\n//             dispatch(setIsProgressAC(isProgress))\n//\n//         }\n//     }\n// }\n\nlet mapStateToProps = (state) => { // пробрасываем props в компоненту\n    // console.log(state.auth);\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isProgress: state.usersPage.isProgress,\n        followingInProgress: state.usersPage.followingInProgress\n    }\n} // передаем в connect который их у себя вызывает и получеат объект из mapStateToProps и склеивает их в props\n\n\n//     // это тоже самое что mapDispatchToProps НО функция connect сама делает dispatch(test) и пробрасывает в наш users-reducer\n//     // такая сокращеная запись без key: value допустима только в том слуе если\n//     // в reducer экшен криетер называеться так же как и ключ в объекте премер {setUsers: setUsers} можно оставить только ключь\n\n// let AuthRedirectComponent = withAuthRedirect(UsersContainer);\n\n\nexport default connect(mapStateToProps,\n    {\n        getUsersThunk,\n        setFollowThunk,\n        setUnFollowThunk\n    })(UsersContainer); // функция connect оборачивает наш класс UsersContainer внутри создает actionCreator и отдает callBack.\n                        // actionCreator в этой компоненте НЕ используеться ТОЛЬКО callBack !!!! ВАЖНО"],"sourceRoot":""}