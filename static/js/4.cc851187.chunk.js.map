{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogForm.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItems","props","path","id","className","style","dialog","to","activeClassName","active","name","Message","message","Dialogs","dialogsElements","data","dialogsData","map","messagesElements","messagesData","dialogs","dialogs_item","massages","DialogForm","onSubmit","handleSubmit","type","placeholder","component","s","wrapper_button","disabled","pristine","submitting","onClick","form","rest","DialogsContainer","this","formData","addMassageAction","sendMessage","reset","React","Component","compose","connect","state","console","log","messagePage"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,2B,0ICWnKC,EATK,SAACC,GACjB,IAAIC,EAAO,YAAcD,EAAME,GAG/B,OACI,oBAAIC,UAAWC,IAAMC,OAArB,SAA6B,cAAC,IAAD,CAASC,GAAIL,EAAMM,gBAAiBH,IAAMI,OAA1C,SAAmDR,EAAMS,UCG/EC,EARC,SAACV,GACb,OACI,8BACI,qBAAKG,UAAWC,IAAMO,QAAtB,SAAgCX,EAAMW,aC4BnCC,EA5BC,SAACZ,GAIb,IAAIa,EAAkBb,EAAMc,KAAKC,YAC5BC,KAAI,SAAAX,GAAM,OAAI,cAAC,EAAD,CAA6BI,KAAMJ,EAAOI,KAAMP,GAAIG,EAAOH,IAAzCG,EAAOH,OAGxCe,EAAmBjB,EAAMc,KAAKI,aAC7BF,KAAI,SAAAL,GACD,OAAO,cAAC,EAAD,CAA0BA,QAASA,EAAQA,SAA7BA,EAAQT,OAGrC,OACI,sBAAKC,UAAWC,IAAMe,QAAtB,UAEI,qBAAKhB,UAAWC,IAAMgB,aAAtB,SACI,6BACKP,MAGT,qBAAKV,UAAWC,IAAMiB,SAAtB,SACKJ,Q,yCCTFK,EAdI,SAACtB,GAEhB,OACI,uBAAMG,UAAU,cAAcoB,SAAUvB,EAAMwB,aAA9C,UACI,8BACI,cAAC,IAAD,CAAOC,KAAK,OAAOC,YAAY,eAAejB,KAAK,cAAckB,UAAU,eAE/E,qBAAKxB,UAAWyB,IAAEC,eAAlB,SACI,wBAAQC,SAAU9B,EAAM+B,UAAY/B,EAAMgC,WAAYC,QAASjC,EAAMkC,KAAKC,KAA1E,uBCHVC,E,oNASQ,IAAD,OAGL,OACI,gCACI,cAAC,EAAD,eAAaC,KAAKrC,QAElB,cAAC,IAAD,CAAMuB,SAAU,SAAAe,GAEZ,EAAKtC,MAAMuC,iBAAiBD,EAASE,cAFzC,SAIK,gBAAEhB,EAAF,EAAEA,aAAcO,EAAhB,EAAgBA,SAAUG,EAA1B,EAA0BA,KAAMO,EAAhC,EAAgCA,MAAOT,EAAvC,EAAuCA,WAAvC,OACG,cAAC,EAAD,CAAYR,aAAcA,EAAcO,SAAUA,EAAUG,KAAMA,EAAMO,MAAOA,EAAOT,WAAYA,c,GArB3FU,IAAMC,WAoCtBC,sBACXC,aARkB,SAACC,GAEnB,OADAC,QAAQC,IAAIF,EAAMG,aACX,CACHnC,KAAMgC,EAAMG,eAKS,CAACV,uBADfK,CAGbR","file":"static/js/4.cc851187.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"active\":\"Dialogs_active__2sQhs\",\"dialogs_item\":\"Dialogs_dialogs_item__2KlcX\",\"massages\":\"Dialogs_massages__3TLCQ\",\"message\":\"Dialogs_message__1xIDh\"};","import style from './../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItems = (props) => {\n    let path = \"/dialogs/\" + props.id;\n\n\n    return (\n        <li className={style.dialog}><NavLink to={path} activeClassName={style.active}>{props.name}</NavLink></li>\n    );\n}\n\nexport default DialogItems;","import style from './../Dialogs.module.css';\n\n\nconst Message = (props) => {\n    return (\n        <div>\n            <div className={style.message}>{props.message}</div>\n\n        </div>\n    );\n}\nexport default Message;","import React from \"react\"; // Нужен для того чтобы jsx конвертировать в js через babel\nimport style from './Dialogs.module.css';\nimport DialogItems from \"./DialogItem/DialogsItem\";\nimport Message from \"./Message/Message\";\n\n\nconst Dialogs = (props) => {\n\n    // console.log(props.isAuth);\n\n    let dialogsElements = props.data.dialogsData\n        .map(dialog => <DialogItems key={dialog.id} name={dialog.name} id={dialog.id}/>);\n\n\n    let messagesElements = props.data.messagesData\n        .map(message => {\n            return <Message key={message.id} message={message.message}/>\n        })\n\n    return (\n        <div className={style.dialogs}>\n\n            <div className={style.dialogs_item}>\n                <ul>\n                    {dialogsElements}\n                </ul>\n            </div>\n            <div className={style.massages}>\n                {messagesElements}\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;","import React from \"react\"; // Нужен для того чтобы jsx конвертировать в js через babel\nimport s from \"../Profile/AllPosts/AllPosts.module.css\";\nimport {Field} from \"react-final-form\";\n\n\nconst DialogForm = (props) => {\n\n    return (\n        <form className=\"add_message\" onSubmit={props.handleSubmit}>\n            <div>\n                <Field type=\"text\" placeholder='Send message' name=\"sendMessage\" component=\"textarea\"/>\n            </div>\n            <div className={s.wrapper_button}>\n                <button disabled={props.pristine || props.submitting} onClick={props.form.rest}>Add</button>\n            </div>\n        </form>\n    );\n}\n\nexport default DialogForm;","import React from \"react\"; // Нужен для того чтобы jsx конвертировать в js через babel\nimport {addMassageAction} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\n// import {withAuthRedirect} from \"../hoc/AuthRedirect\";\nimport {compose} from \"redux\";\nimport {Form} from \"react-final-form\";\nimport DialogForm from \"./DialogForm\";\n// import {Redirect} from \"react-router\";\n\nclass DialogsContainer extends React.Component {\n\n    componentDidMount() {\n        // console.log(this.props.isAuth);\n        // if (this.props.isAuth) {\n        //     return <Redirect to={\"/Login\"}/>\n        // }\n    }\n\n    render() {\n        // debugger;\n        // console.log(this.props);\n        return (\n            <div>\n                <Dialogs {...this.props}/>\n\n                <Form onSubmit={formData => {\n                    // console.log(formData.sendMessage);\n                    this.props.addMassageAction(formData.sendMessage)\n                }}>\n                    {({handleSubmit, pristine, form, reset, submitting}) => (\n                        <DialogForm handleSubmit={handleSubmit} pristine={pristine} form={form} reset={reset} submitting={submitting}/>\n                    )}\n                </Form>\n            </div>\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    console.log(state.messagePage);\n    return {\n        data: state.messagePage,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {addMassageAction}),\n    // withAuthRedirect // HOC High Order Component https://www.youtube.com/watch?v=7W4PD4BN3eY&t=99s\n)(DialogsContainer);\n\n// HOC High Order Component https://www.youtube.com/watch?v=7W4PD4BN3eY&t=99s\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\n//\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n\n\n\n"],"sourceRoot":""}